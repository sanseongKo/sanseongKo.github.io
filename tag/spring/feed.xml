<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator>
  <link href="https://sanseongko.github.io/tag/spring/feed.xml" rel="self" type="application/atom+xml" />
  <link href="https://sanseongko.github.io/" rel="alternate" type="text/html" />
  <updated>2021-06-18T21:47:44+09:00</updated>
  <id>https://sanseongko.github.io/tag/spring/feed.xml</id>

  
  
  

  
    <title type="html">SanseongKo’s Blog | </title>
  

  
    <subtitle>온리 공부를 위한 블로그</subtitle>
  

  

  
    
      
    
  

  
  

  
    <entry>
      <title type="html">Spring Security 연습</title>
      <link href="https://sanseongko.github.io/springsecurity" rel="alternate" type="text/html" title="Spring Security 연습" />
      <published>2021-06-13T00:00:00+09:00</published>
      <updated>2021-06-13T00:00:00+09:00</updated>
      <id>https://sanseongko.github.io/springsecurity</id>
      <content type="html" xml:base="https://sanseongko.github.io/springsecurity">&lt;p&gt;기술 면접중 스프링 시큐리티에 관하여 질문을 받았고, 대답을 못했다. 돌아가는 모습은 내가 아는 모습은 비슷하지만, 지원을 해주는 것에서 많이 차이가
나는 것 같다. 편한기능이 많고, 알아두면 좋을 것 같다. 물론 어떻게 돌아가는지도 넣을 것이고, 자료는 유튜브 &lt;a href=&quot;https://www.youtube.com/watch?v=riwrVN1JVbU&quot;&gt;데어 프로그래밍&lt;/a&gt;님의
유튜브에서 가져왔고 설명이 잘되어 있는 것 같으니, 궁금할 땐 클릭해서 들어가 보자.&lt;/p&gt;

&lt;h3&gt;Spring Security 연습 1(2021-06-17)&lt;/h3&gt;
&lt;p&gt;처음 시작에서 Spring Security 의존주입을 하고 나서, yml파일을 생성하고 내용을 정리해준다. 브라우저에 접속하여 url을 적으면, 자동으로 스프링
시큐리티가 login페이지로 넘겨준다. 아이디는 기본 user이며, 비밀번호는 처음 서버를 실행하고 나서 콘솔에 사진처럼 나타나게된다. spring security 
의존주입시 처음 들어가는 모든 요청 페이지는 막혀서 로그인을 해줘야하고 로그인이 되어야 접근이 가능하다는 점 유의하자. 또한 로그아웃도 지원하기 때문에, 
다시 서버를 실행하였다면, 로그아웃 한번 해주고 실행하자.(비밀번호도 재실행 될 때마다 변경됨)
&lt;img src=&quot;./assets/built/images/spring/securitypassword.PNG&quot; alt=&quot;ex_screenshot&quot; /&gt;
&lt;b&gt;MustacheViewResolver&lt;/b&gt;
해당 유튜브 강의에서는 html을 이용하여 초반에 뷰를 작성하였다. 하지만 처음 의존 주입을 Mustache로 하였기 때문에, 해당 configuration 클래스를
생성하고, MustacheViewResolver자료형으로 참조변수를 만들어 사용할 수 있다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-angular2html&quot;&gt;MustacheViewResolver resolver = new MustacheViewResolver();
		resolver.setCharset(&quot;UTF-8&quot;);
		resolver.setContentType(&quot;text/html; charset=UTF-8&quot;);
		resolver.setPrefix(&quot;classpath:/templates/&quot;);
		resolver.setSuffix(&quot;.html&quot;);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;이런식으로 만들어졌을 경우 .mustache로 설정되어 있던 suffix가 html로 경로 설정이 될 수 있도록 해준다.&lt;/p&gt;

&lt;h3&gt;Spring Security 연습 2(2021-06-18)&lt;/h3&gt;
&lt;p&gt;&lt;b&gt;@EnableWebSecurity&lt;/b&gt;
웹 보안을 활성화하고, WebSecurityConfigurer을 상속받아 클래스를 설정할 때 자주 쓰인다. @Configuration 클래스에 @EnableWebSecurity을 추가하여
스프링 시큐리티를 설정할 클래스라고 정의한다.
&lt;br /&gt;
&lt;b&gt;WebSecurityConfigurer&lt;/b&gt;는 WebSecurityConfigurer 인스턴스를 편리하게 만들기 위하여 사용한다. 상속을 받게 되면, configure 메소드를 오버
라이딩 할 수 있고, 파라미터는 HttpSecurity 객체를 받게 된다.
&lt;br /&gt;
&lt;b&gt;authorizeRequests()&lt;/b&gt;메서드는 시큐리티 처리에 HttpServletRequest를 이용한다는 것을 의미하고, &lt;b&gt;antMatchers()&lt;/b&gt;는 특정 경로를 지정해줄 수 있는 메소드이다.
anonymous(): 인증되지 않은 사용자가 접근할 수 있습니다.
authenticated(): 인증된 사용자만 접근할 수 있습니다.
fullyAuthenticated(): 완전히 인증된 사용자만 접근할 수 있습니다(?)
hasRole() or hasAnyRole(): 특정 권한을 가지는 사용자만 접근할 수 있습니다.
hasAuthority() or hasAnyAuthority():특정 권한을 가지는 사용자만 접근할 수 있습니다.
hasIpAddress(): 특정 아이피 주소를 가지는 사용자만 접근할 수 있습니다.
access(): SpEL 표현식에 의한 결과에 따라 접근할 수 있습니다.
not(): 접근 제한 기능을 해제합니다.
permitAll() or denyAll(): 접근을 전부 허용하거나 제한합니다.
rememberMe(): 리멤버 기능을 통해 로그인한 사용자만 접근할 수 있습니다.
출처: &lt;a href=&quot;https://postitforhooney.tistory.com/entry/SpringSecurity-초보자가-이해하는-Spring-Security-퍼옴&quot;&gt;PostIT&lt;/a&gt;
&lt;br /&gt;
또한 이후에,
.formLogin()
.loginPage(“/loginForm”)
.loginProcessingUrl(“/login”)// /login 주소가 호출이 되면 시큐리티가 낚아채서 대신 로그인을 진행해줌.
.defaultSuccessUrl(“/”);//특정페이지에서 loginForm으로 가게되면 특정페이지로 다시 보내줌
이렇게 작성을 하게된다면, loginPage는 로그인 페이지가 어디인지, loginProcessingUrl은 login주소가 호출될 떄 시큐리티가 낚아채서 대신 로그인을 진행해주는 메소드이며,
.defaultSuccessUrl은 로그인 이후에 보여질 기본 페이지이며, 특정페이지로 접속하려 할 때 인증이 필요하여 로그인 페이지로 넘어갈 경우 그 로그인페이지에서 전에 config에서 설정해 놓은 기본 경로로
가지 않고 특정페이지가 보여지게 된다.
&lt;br /&gt;&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Ko</name>
        
        
      </author>

      

      
        <category term="spring" />
      

      
        <summary type="html">기술 면접중 스프링 시큐리티에 관하여 질문을 받았고, 대답을 못했다. 돌아가는 모습은 내가 아는 모습은 비슷하지만, 지원을 해주는 것에서 많이 차이가 나는 것 같다. 편한기능이 많고, 알아두면 좋을 것 같다. 물론 어떻게 돌아가는지도 넣을 것이고, 자료는 유튜브 데어 프로그래밍님의 유튜브에서 가져왔고 설명이 잘되어 있는 것 같으니, 궁금할 땐 클릭해서 들어가 보자.</summary>
      

      
      
    </entry>
  
</feed>
