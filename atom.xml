<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title> - Articles</title>
    <description>온리 공부를 위한 블로그</description>
    <link>
    https://sanseongKo.github.io</link>
    
      
      <item>
        <title>카카오 2021 블라인드 코딩테스트 1번</title>
        
          <description>&lt;h3&gt;문제&lt;/h3&gt;
&lt;p&gt;카카오에 입사한 신입 개발자 네오는 “카카오계정개발팀”에 배치되어, 카카오 서비스에 가입하는 유저들의 아이디를 생성하는 업무를 담당하게 되었습니다.
“네오”에게 주어진 첫 업무는 새로 가입하는 유저들이 카카오 아이디 규칙에 맞지 않는 아이디를 입력했을 때, 입력된 아이디와 유사하면서 규칙에 맞는 
아이디를 추천해 주는 프로그램을 개발하는 것입니다.
&lt;br /&gt;
&lt;a href=&quot;https://tech.kakao.com/2021/01/25/2021-kakao-recruitment-round-1/&quot;&gt;문제 자세히 보기&lt;/a&gt;&lt;/p&gt;

</description>
        
        <pubDate>Tue, 15 Jun 2021 00:00:00 +0900</pubDate>
        <link>
        https://sanseongKo.github.io/codingtest-2021_kakao01</link>
        <guid isPermaLink="true">https://sanseongKo.github.io/codingtest-2021_kakao01</guid>
      </item>
      
    
      
      <item>
        <title>Spring Security 연습</title>
        
          <description>&lt;p&gt;기술 면접중 스프링 시큐리티에 관하여 질문을 받았고, 대답을 못했다. 돌아가는 모습은 내가 아는 모습은 비슷하지만, 지원을 해주는 것에서 많이 차이가
나는 것 같다. 편한기능이 많고, 알아두면 좋을 것 같다. 물론 어떻게 돌아가는지도 넣을 것이고, 자료는 유튜브 &lt;a href=&quot;https://www.youtube.com/watch?v=riwrVN1JVbU&quot;&gt;데어 프로그래밍&lt;/a&gt;님의
유튜브에서 가져왔고 설명이 잘되어 있는 것 같으니, 궁금할 땐 클릭해서 들어가 보자.&lt;/p&gt;

</description>
        
        <pubDate>Sun, 13 Jun 2021 00:00:00 +0900</pubDate>
        <link>
        https://sanseongKo.github.io/springsecurity</link>
        <guid isPermaLink="true">https://sanseongKo.github.io/springsecurity</guid>
      </item>
      
    
      
      <item>
        <title>기술 면접 예상 질문</title>
        
          <description>&lt;p&gt;기술 면접에 관하여, 내가 지원하려고 하는 자바, 스프링, 관련 지식 또는 CS관련 지식들을 적고 대답을 적어보는 포스팅을 하려고 한다.
면접에 가서 모른다는 답변을 너무 많이했다… 아는 건데 막상 설명을 하려니 못하겠어서 찾아보고 정리하고 정확하게 말을 할 수 있을 정도가 되었으면 한다.&lt;/p&gt;

</description>
        
        <pubDate>Sun, 13 Jun 2021 00:00:00 +0900</pubDate>
        <link>
        https://sanseongKo.github.io/interview</link>
        <guid isPermaLink="true">https://sanseongKo.github.io/interview</guid>
      </item>
      
    
      
      <item>
        <title>Algorithm Greedy(탐욕법)에 관하여</title>
        
          <description>&lt;p&gt;오늘은 알고리즘 중 하나인 Greedy에 관하여 알아보도록 하겠다.&lt;/p&gt;

</description>
        
        <pubDate>Fri, 11 Jun 2021 00:00:00 +0900</pubDate>
        <link>
        https://sanseongKo.github.io/algorithm-greedy</link>
        <guid isPermaLink="true">https://sanseongKo.github.io/algorithm-greedy</guid>
      </item>
      
    
      
      <item>
        <title>Java REST API 실습</title>
        
          <description>&lt;p&gt;REST API를 너무 해보고 싶어 하나 하나 전부 뜯어 보려한다. 강의를 사서 볼까도 했지만, 오기가 생겨서 다 찾아보고 적어보려고 한다. 스프링 부트의 
어노테이션에 관한 것도 같이 올릴 것이다. 또한 하루만에 완성하는 포스팅이 아니기 때문에, 수정날짜를 밑에 적도록 하겠다.&lt;/p&gt;

</description>
        
        <pubDate>Thu, 10 Jun 2021 00:00:00 +0900</pubDate>
        <link>
        https://sanseongKo.github.io/java-restapipractice</link>
        <guid isPermaLink="true">https://sanseongKo.github.io/java-restapipractice</guid>
      </item>
      
    
      
      <item>
        <title>Algorithm 완전 탐색에 관하여</title>
        
          <description>&lt;p&gt;오늘은 알고리즘 중 하나인 완전 탐색 알고리즘에 대하여 알아보려고 한다.&lt;/p&gt;

</description>
        
        <pubDate>Tue, 01 Jun 2021 00:00:00 +0900</pubDate>
        <link>
        https://sanseongKo.github.io/algorithm-Exhaustive-Search</link>
        <guid isPermaLink="true">https://sanseongKo.github.io/algorithm-Exhaustive-Search</guid>
      </item>
      
    
      
      <item>
        <title>Algorithm 정렬에 관하여</title>
        
          <description>&lt;p&gt;오늘은 정렬의 종류와 각 종류의 장단점에 대하여 알아보려한다. &lt;br /&gt;
여러가지 정렬이 있지만 기본적으로 그리고 내가 알고 싶은 정렬에 대하여 알아보려한다.&lt;/p&gt;

</description>
        
        <pubDate>Mon, 31 May 2021 00:00:00 +0900</pubDate>
        <link>
        https://sanseongKo.github.io/algorithm-sort</link>
        <guid isPermaLink="true">https://sanseongKo.github.io/algorithm-sort</guid>
      </item>
      
    
      
      <item>
        <title>Java RESTful API 개념 정리</title>
        
          <description>&lt;p&gt;오늘은 RESTful API에 대하여 정리해보려고 한다.
RESTful API를 알기전에 REST와 RESTful의 차이를 알아야 한다.
REST란, 분산시스템 설계를 위한 &lt;b&gt;아키텍처 스타일&lt;/b&gt;이다. 즉, 제약 조건의 집합이라고 볼 수 있다. 
그렇다면, RESTful은 무엇일까? RESTful은 제약조건의 집합 즉, 아키텍처 스타일, 아키텍처 원칙을 모두 만족하는 것을 의미한다.&lt;/p&gt;

</description>
        
        <pubDate>Sun, 30 May 2021 00:00:00 +0900</pubDate>
        <link>
        https://sanseongKo.github.io/java-restapi</link>
        <guid isPermaLink="true">https://sanseongKo.github.io/java-restapi</guid>
      </item>
      
    
      
      <item>
        <title>Algorithm Heap에 관하여</title>
        
          <description>&lt;p&gt;오늘은 자료구조 힙에 관하여 알아보자.&lt;/p&gt;

</description>
        
        <pubDate>Fri, 28 May 2021 00:00:00 +0900</pubDate>
        <link>
        https://sanseongKo.github.io/algorithm-heap</link>
        <guid isPermaLink="true">https://sanseongKo.github.io/algorithm-heap</guid>
      </item>
      
    
      
      <item>
        <title>Java ORM이란?</title>
        
          <description>&lt;p&gt;MyBatis를 사용하다가 ORM이라는 것을 듣게 되었다. 너무 궁금하니 한번 알아보자.&lt;/p&gt;

</description>
        
        <pubDate>Thu, 27 May 2021 00:00:00 +0900</pubDate>
        <link>
        https://sanseongKo.github.io/java-orm</link>
        <guid isPermaLink="true">https://sanseongKo.github.io/java-orm</guid>
      </item>
      
    
      
      <item>
        <title>Java JPA란?</title>
        
          <description>
</description>
        
        <pubDate>Thu, 27 May 2021 00:00:00 +0900</pubDate>
        <link>
        https://sanseongKo.github.io/java-jpa</link>
        <guid isPermaLink="true">https://sanseongKo.github.io/java-jpa</guid>
      </item>
      
    
      
      <item>
        <title>Algorithm Stack and Queue에 관하여</title>
        
          <description>&lt;p&gt;오늘은 스택과 큐라는 알고리즘을 알아보도록 하겠다. 
스택과 큐를 같이 묶어서 포스팅하는 이유는 비슷한 느낌이자만 차이가 분명하게 존재하기 때문이다.&lt;/p&gt;

</description>
        
        <pubDate>Thu, 27 May 2021 00:00:00 +0900</pubDate>
        <link>
        https://sanseongKo.github.io/algorithm-stackqueue</link>
        <guid isPermaLink="true">https://sanseongKo.github.io/algorithm-stackqueue</guid>
      </item>
      
    
      
      <item>
        <title>Java .equals(), hashcode(), ==의 차이점</title>
        
          <description>&lt;p&gt;오늘은 많이 쓰지만 그래서 이게 뭐가 다르지 했던 ==연산자와 equals()메소드와 hashcode()메소드의 차이에 대하여 알아볼까?
&lt;img src=&quot;./assets/built/images/holololol.jpg&quot; alt=&quot;ex_screenshot&quot; /&gt;호롤ㄹ로로ㄹㄹㄹ&lt;/p&gt;

</description>
        
        <pubDate>Wed, 26 May 2021 00:00:00 +0900</pubDate>
        <link>
        https://sanseongKo.github.io/java-evshash</link>
        <guid isPermaLink="true">https://sanseongKo.github.io/java-evshash</guid>
      </item>
      
    
      
      <item>
        <title>Algorithm 동적 계획법에 관하여</title>
        
          <description>&lt;h3&gt;동적 계획법&lt;/h3&gt;
&lt;p&gt;동적 계획법이란, 보다 큰 문제를 작은 문제로 나누어 푸는 방식을 뜻한다. 이 부분은 분할과 정복과 유사한데, 분할과 정복은 중복이 절대 일어날 수 없다
는 것이고, 동적 계획법에서는 문제가 중복된다는 점이다. 이 부분에서 동적 계획법은 중복으로 일어난 작은 문제에 대하여 그 문제에 사용되었던 방식을, 값을
캐시(cache)라 불리는 메모리에 미리 넣어두고 중복되는 문제를 마주칠 시에 미리 저장되어 있던 값을 꺼내어 사용하는 것이다.(Memoization 메모이제이션)
&lt;img src=&quot;./assets/built/images/algorithm/dynamic/dynamic.png&quot; alt=&quot;ex_screenshot&quot; /&gt;
위의 사진에서 보이는 대로 f(3)의 f(2)의 검은색 부분이 겹치기 때문에, 이 값들은 캐시에 저장해두고 쓸 수 있다. 미리 값을 정해두고 계산을 하는 것이기
때문에 시간이 단축된다.&lt;/p&gt;

</description>
        
        <pubDate>Tue, 25 May 2021 00:00:00 +0900</pubDate>
        <link>
        https://sanseongKo.github.io/algorithm-dynamicprogramming</link>
        <guid isPermaLink="true">https://sanseongKo.github.io/algorithm-dynamicprogramming</guid>
      </item>
      
    
      
      <item>
        <title>Algorithm Hash에 관하여</title>
        
          <description>&lt;p&gt;오늘은 Hash에 대하여 정리를 해보려고 한다.&lt;/p&gt;

</description>
        
        <pubDate>Tue, 25 May 2021 00:00:00 +0900</pubDate>
        <link>
        https://sanseongKo.github.io/algorithm-hash</link>
        <guid isPermaLink="true">https://sanseongKo.github.io/algorithm-hash</guid>
      </item>
      
    
  </channel>
</rss>
